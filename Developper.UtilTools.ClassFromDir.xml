<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2017.1 (Build 792)" ts="2017-11-28 14:19:16">
<Class name="Developper.UtilTools.ClassFromDir">
<Description>
Создание классов из директории (Кодировка текстовых фалов UTF8)
do ##class(Developper.UtilTools.ClassFromDir).run("C:\AppServ\TreeJS\three.js-master\HTML\js\Three\src\","HTML.js.Three")

  do ##class(Developper.UtilTools.ClassFromDir).replaceClassnameAfte()</Description>
<Super>%RegisteredObject</Super>
<TimeChanged>64615,51544.709435</TimeChanged>
<TimeCreated>64566,39625.768074</TimeCreated>

<Method name="run">
<Description>
Загрузка файлолв из  паки в классы
do ##class(Developper.UtilTools.ClassFromDir).run()
do ##class(Developper.UtilTools.ClassFromDir).run("Demo.ModalWindowCSS","C:\AppServ\www\css3_modalwin\")

do ##class(Developper.UtilTools.ClassFromDir).run("HTML.ThreeJSDev.editor","C:\AppServ\three.js-dev\three.js-dev\editor\")
do ##class(Developper.UtilTools.ClassFromDir).run("HTML.jQueryEasyUI","C:\AppServ\jquery-easyui-1.5.3\")
do ##class(Developper.UtilTools.ClassFromDir).run("HTML.ThreeJSDev","C:\AppServ\three.js-dev\three.js-dev\")</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>PathApp="",PacName="",isBinClass=0</FormalSpec>
<Implementation><![CDATA[
	
    ; s:PacName="" PacName="HTML.ThreeJSDev.editor"
    ; s:PathApp="" PathApp="C:\AppServ\three.js-dev\three.js-dev\editor\"
     
     s:PacName="" PacName="HTML.ThreeJS"
     s:PathApp="" PathApp="C:\AppServ\three.js-dev\three.js-dev\"
     
     ; создаем список файлов, которые помещаем в класс как бинарные файлы base64
     s gl2="^IsklBIN"_$JOB
     s @gl2@("jquery.easyui.min.js")=1
     s @gl2@("jquery.easyui.mobile.js")=1
     s @gl2@("jquery.min.js")=1
     s @gl2@("jquery.js")=1
     s @gl2@("three.js")=1
     s @gl2@("three.min.js")=1
     s @gl2@("three.module.js")=1
     
    // создаем список всех файлов с подкаталогами 
    s Dir=$zse(PathApp_"*")
    s gl="^DevelopperUtilToolsClassFromDir"_$JOB
    k @gl
    d ..GetDir2(Dir,PathApp,PacName,gl)
    
    // создаем классы
    d ..CreateClass(gl,isBinClass)
    
    ; Принудительно меняем текст в классах
    ; do ##class(Developper.UtilTools.ClassFromDir).replaceTXT("<link rel=""stylesheet"" type=""text/css"" href=""../demo.css""/>","<link  href='Demo.jQueryEasyUI.demo.demo.cls'  rel='stylesheet' />")
   
    ; zw @gl
    k @gl
    k @gl2
    w "OK"
    q
]]></Implementation>
</Method>

<Method name="replaceClassnameAfte">
<Description>
окончательная замена имени файлов на имя класса
do ##class(Developper.UtilTools.ClassFromDir).replaceClassnameAfte()</Description>
<ClassMethod>1</ClassMethod>
<Implementation><![CDATA[
   s gl="^oddDEF"
   s ClassName=""
   for {
      s ClassName=$o(@gl@(ClassName))
      q:ClassName=""
      continue:$l(ClassName,"%")>1
      continue:$l(ClassName,"Developper.UtilTools")>1
      ; s ClassName="HTML.jQueryEasyUI.demo.combobox.combobox.data1"
      if $d(@gl@(ClassName,"p","NameOnly",22)),$d( @gl@(ClassName,"p","DstName",22)) {
          s NameOnly=@gl@(ClassName,"p","NameOnly",22)
          s DstName=@gl@(ClassName,"p","DstName",22)
          do ##class(Developper.UtilTools.ClassFromDir).replaceTXT(NameOnly,DstName)
          w !,"Обработан:"_ClassName
       }
   }
   w "!!OK!!"
]]></Implementation>
</Method>

<Method name="replaceTXT">
<Description><![CDATA[
do ##class(Developper.UtilTools.ClassFromDir).replaceTXT("<link rel=""stylesheet"" type=""text/css"" href=""../demo.css""/>","<link  href='HTML.jQueryEasyUI.demo.demo.cls'  rel='stylesheet' />")]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Src="",Dst=""</FormalSpec>
<Implementation><![CDATA[
   s gl="^oddDEF"
   s ClassName=""
   for {
      s ClassName=$o(@gl@(ClassName))
      q:ClassName=""
      continue:$l(ClassName,"%")>1
      continue:$l(ClassName,"Developper.UtilTools")>1
      ; s ClassName="HTML.jQueryEasyUI.demo.demo"
      s block="x"
      s tt=##class(%Dictionary.ClassDefinition).%OpenId(ClassName)
      s isSaveClass=0
      if $d(@gl@(ClassName,block)){
	    s nameX=""
	    for  {
		    s nameX=$o(@gl@(ClassName,block,nameX))
	        q:nameX=""
	        s codBlock=21
	        if $d(@gl@(ClassName,block,nameX,codBlock)){
              s $ZTRAP="EnyErr"
	          s line=""
	          for {
	              s line=$o(@gl@(ClassName,block,nameX,codBlock,line))
	              q:line=""
	              s code=@gl@(ClassName,block,nameX,codBlock,line)
	              if $l(code,Src)>1 {
		             s isSaveClass=1
	                 s code=$REPLACE(code,Src,Dst)
  	                 s @gl@(ClassName,block,nameX,codBlock,line)=code
	              }
	           }
EnyErr	           
	        }
	     }
      }
      if isSaveClass=1 {
         s tt.Description=tt.Description_" "
         w tt.%Save(),! 
         Do $system.OBJ.Compile(ClassName,"cuk /checkuptodate=expandedonly")
         w !,ClassName
      }
   }	  
   q
]]></Implementation>
</Method>

<Method name="ExportDir">
<Description>
Выгрузка классов в папку</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>PacName="",DirName=""</FormalSpec>
</Method>

<Method name="GetDir2">
<Description>
Метод создает глобал сосписком файлов в каталоге ( и подкаталогах)</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>Dir,PathApp,PacName,gl</FormalSpec>
<Implementation><![CDATA[
 
 s filter=""
 s rs = ##class(%Library.ResultSet).%New("%Library.File:FileSet")
 s sc = rs.Execute(Dir,filter,"Name")
 k files
 while rs.Next()
 {
     s name = rs.Get("Name")
     if (rs.Get("Type") = "D")
     {
        d ..GetDir2(name,PathApp,PacName,gl)
     }else{
        ; w !,name  
        s Sname=$REPLACE(name,PathApp,"")
        s LongPath=$e(Sname,1,$l(Sname)-$l( $p(Sname,"\",$l(Sname,"\")  ) ))
        s NameOnly=$e(Sname,$l(LongPath)+1,$l(Sname))
        
        s ClasName=$REPLACE(name,PathApp,"")
        s ClasName=$REPLACE( ClasName," ","")
        continue:ClasName=""
        s ClasName=$REPLACE(ClasName,"-",".")
        s ClasName=$REPLACE(ClasName,"_",".")
        if $l(name,".")>1 {
          s rashirenie=$p(name,".",$l(name,"."))
          s ClasName=$e(ClasName,1,$l(ClasName)-$l(rashirenie)-1)
        }
        for ind=0:1:9 {  s ClasName=$REPLACE(ClasName,"."_ind,".v"_ind )  }
          
        s oneSymb=$e(ClasName,1,1) 
        if oneSymb="." {  s ClasName=$e(ClasName,2,$l(ClasName))   }
        for ind=0:1:9 {  
            if oneSymb=ind {s ClasName=$e(ClasName,2,$l(ClasName))   }
        }
        
        
        ; s ClasName=$REPLACE(ClasName,".","")
        s url=$Replace(name,PathApp,"")
        s url=$Replace(url,"\","/")
        
        s ClasName=$Replace(ClasName,PathApp,"")
        s ClasName=$Replace(ClasName,"\",".")
        s ClasName=PacName_"."_ClasName
        s ClasNameDst=ClasName_".cls"
        if '$d(@gl@(ClasName)) {
           s @gl@(ClasName)=$lb(name,url,ClasNameDst,LongPath,NameOnly)
        }else{
	        s ClasName=ClasName_$ZCVT(rashirenie,"U")
	        s ClasNameDst=ClasName_".cls"
            s @gl@(ClasName)=$lb(name,url,ClasNameDst,LongPath,NameOnly)
        }
        for i=1:1:$l(Sname,"/"){
	       
        }
     }
  }
]]></Implementation>
</Method>

<Method name="CreateClass">
<Description>
создание классов из списока фалов помещенных ранее в глобалы</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>gl,isBinClass=0</FormalSpec>
<Implementation><![CDATA[
      s ClassName=""
      for  {
         s ClassName=$o(@gl@(ClassName))
         q:ClassName=""
         s FileName=$lg(@gl@(ClassName),1)
         s JsName=$lg(@gl@(ClassName),2)
         s CacheName=$lg(@gl@(ClassName),3)
         s LongPath=$lg(@gl@(ClassName),4)
         s NameOnly=$lg(@gl@(ClassName),5)
         
        s rashirenie=$ZCVT($p(FileName ,".", $l(FileName,".")),"L")
        s Typ=..ContentTypeLocal(FileName)
        w !,ClassName,!
        Do:$zObjClassMethod("%CompiledClass","%ExistsId",ClassName)=1 $system.OBJ.Delete(ClassName) 
        s tt=##class(%Dictionary.ClassDefinition).%New(ClassName)
        s tt.Super="%CSP.Page"
        s tt.Description=""
      if $l("js",rashirenie)'=1{
        s tt.Description=tt.Description_$c(10)_"///<br>Скрипт(JS):"
        s tt.Description=tt.Description_$c(10)_"///<br> &lt;script src='"_ClassName_".cls'&gt;&lt;/script&gt; " 
        s tt.Description=tt.Description_$c(10)_"///<br> <!--  <script src='"_ClassName_".cls'></script>   -->" 
    }
    if $l("css",rashirenie)'=1{
         s tt.Description=tt.Description_$c(10)_"///<br>Файл стилей:"
         s tt.Description=tt.Description_$c(10)_"///<br>  &lt;link href='"_ClassName_".cls'  rel='stylesheet' &gt;" 
         s tt.Description=tt.Description_$c(10)_"///<br>  <!--  <link  href='"_ClassName_".cls'  rel='stylesheet' >    -->" 
    }
    
    if $l("jpeg,jpg,bmp,tiff,tif,png",rashirenie)'=1{
         s tt.Description=tt.Description_$c(10)_"///<br>Изображение:"
         s tt.Description=tt.Description_$c(10)_"///<br>  &lt;img src='"_ClassName_".cls'  alt='Нет фото'  width=320 height=240 &gt;" 
         s tt.Description=tt.Description_$c(10)_"///<br>  <!--  <img  src='"_ClassName_".cls'  alt='Нет фото'  width=320 height=240 >    -->" 
         // <img src='HTML.img.NoFoto.cls' alt='Нет фото' >
    }
  
    s tt.ProcedureBlock=1
             
    s MethodNameHead="OnPreHTTP"
    s MethodHead=##class(%Dictionary.MethodDefinition).%New(ClassName_"."_MethodNameHead)
    d MethodHead.Implementation.WriteLine("    Do %response.SetHeader(""Content-Type"","""_Typ_""") ")
    if Typ="application/octet-stream" {
        d MethodHead.Implementation.WriteLine("       Do %response.SetHeader(""Content-Disposition: attachment; filename="","""_FileName_""") ")
       ; d MethodHead.Implementation.WriteLine("       Do %response.SetHeader(""Content-Length"","""_siz_""") ")
    }else{
        d MethodHead.Implementation.WriteLine("    if $d(%request.Data(""download"",1))") 
        d MethodHead.Implementation.WriteLine("    {")
        d MethodHead.Implementation.WriteLine("       Do %response.SetHeader(""Content-Disposition: attachment; filename="","""_FileName_""") ")
        ; d MethodHead.Implementation.WriteLine("       Do %response.SetHeader(""Content-Length"","""_siz_""") ")
        d MethodHead.Implementation.WriteLine("    }")
    }
    d MethodHead.Implementation.WriteLine("    q 1  ")
    s MethodHead.Internal=0
    s MethodHead.CodeMode="code"
    s MethodHead.Name=MethodNameHead
    s MethodHead.ReturnType="%Library.Boolean" 
    // s MethodHead.Language="cache"
    s MethodHead.ClassMethod=1         
    d MethodHead.%Save()
    d tt.Methods.Insert(MethodHead)
    s fl=tt.%Save()

      // имя  источника файла     
      s param=##class(%Dictionary.ParameterDefinition).%New(tt.Name_".FileName")
      s param.Name="FileName"    
      s param.Default=FileName
      d param.%Save()
      d tt.Parameters.Insert(param)
      
      s param=##class(%Dictionary.ParameterDefinition).%New(tt.Name_".SrcName")
      s param.Name="SrcName"    
      s param.Default=JsName
      d param.%Save()
      d tt.Parameters.Insert(param)

      s param=##class(%Dictionary.ParameterDefinition).%New(tt.Name_".NameOnly")
      s param.Name="NameOnly"    
      s param.Default=NameOnly
      d param.%Save()
      d tt.Parameters.Insert(param)

      s param=##class(%Dictionary.ParameterDefinition).%New(tt.Name_".LongPath")
      s param.Name="LongPath"    
      s param.Default=LongPath
      d param.%Save()
      d tt.Parameters.Insert(param)



      s param=##class(%Dictionary.ParameterDefinition).%New(tt.Name_".DstName")
      s param.Name="DstName"    
      s param.Default=CacheName
      d param.%Save()
      d tt.Parameters.Insert(param)
     
      s param=##class(%Dictionary.ParameterDefinition).%New(tt.Name_".Rashirenie")
      s param.Name="Rashirenie"    
      s param.Default=rashirenie
      d param.%Save()
      d tt.Parameters.Insert(param)
      
      
      s MethodName="OnPage"
      s MethodDestroy=##class(%Dictionary.MethodDefinition).%New(ClassName_"."_MethodName)
      s MethodDestroy.ReturnType="%Library.Status" 
      s MethodDestroy.Description=$zd($h,4)_"  "_$zt($p($h,",",2))
      ; s MethodDestroy.FormalSpec="head" ; входные параметры
      s MethodDestroy.CodeMode="code"
      s MethodDestroy.Name=MethodName
      s MethodDestroy.Language="cache"
      s MethodDestroy.ClassMethod=1
      s file=##class(%FileCharacterStream).%New()
      s file.Filename=FileName
      s ListRas=".html,.htm,.js,.css,.txt,.scss,.json,.md"
      s ind=0
      s isBinDo=0
      s:$l(ListRas,rashirenie)=1 isBinDo=1
      s:isBinClass=1 isBinDo=1
      s:file.Size>32000 isBinDo=1
      s:rashirenie="htm" isBinDo=0
      s:rashirenie="html" isBinDo=0
      s:rashirenie="css" isBinDo=0
      s:rashirenie="js" isBinDo=0
      
      
      
      s gl2="^IsklBIN"_$JOB
      s indS=""
	  for  {
		  s indS=$o(@gl2@(indS))
	      q:indS=""
		 if $ZCVT(NameOnly,"L")=$ZCVT(indS,"L"){ 
	        s isBinDo=1
	     }
     }
      
	    ;     s subInd="jquery.min.js"
	    ;     if $zcvt(subInd,"L")=$zcvt(NameOnly,"L"){
        ;	        s isBinDo=1
	    ;    }
	    
      // }
      
      if isBinDo=1
      { 
            s param=##class(%Dictionary.ParameterDefinition).%New(tt.Name_".isBinFile")
            s param.Name="isBinFile"    
            s param.Default=1
            d param.%Save()
            d tt.Parameters.Insert(param)

          f  {
             q:file.AtEnd 
             s ind=ind+1
        
            ;  s html=$system.Encryption.Base64Encode(file.Read(100))
             s html=$system.Encryption.Base64Encode(file.Read(32000))
             ; s html=$system.Encryption.Base64Encode(file.ReadLine())
             ; d MethodDestroy.Implementation.WriteLine("   w $system.Encryption.Base64Decode("""_html_""")    ")
               s paramName="Frag"_ind
               s param=##class(%Dictionary.ParameterDefinition).%New(tt.Name_"."_paramName)
               s param.Name=paramName    
               s val=html
               s param.Default=val
               d param.%Save()
               d tt.Parameters.Insert(param)
               d tt.%Save()
               s param=""
               d MethodDestroy.Implementation.WriteLine("   w $system.Encryption.Base64Decode(..#"_paramName_")")
               /*       
                 s paramName="Frag"_ind
                 s MethodPoleDestroy=##class(%Dictionary.MethodDefinition).%New(tt.Name_"."_MethodName)
                 s MethodPoleDestroy.Name=paramName
                 s MethodPoleDestroy.ClassMethod=1
                 d MethodPoleDestroy.Implementation.WriteLine("  w $system.Encryption.Base64Decode("""_html_""")   q ")
                 d tt.Methods.Insert(MethodPoleDestroy)
                 s fl=tt.%Save()
                 d MethodDestroy.Implementation.WriteLine("   d .."_paramName_"()")
               */
            }
      }else{
           s param=##class(%Dictionary.ParameterDefinition).%New(tt.Name_".isBinFile")
           s param.Name="isBinFile"    
           s param.Default=0
           d param.%Save()
           d tt.Parameters.Insert(param)

           
           s paramName="XDataContet"
           s param1=##class(%Dictionary.XDataDefinition).%New(tt.Name_"."_paramName)
           s param1.Name=paramName
           
           
           if rashirenie="scss"{
             d param1.Data.Write("<style type='text/css'>")
           }elseif rashirenie="css"{
              d param1.Data.Write("<style type='text/css'>")
           }elseif rashirenie="js"{
              d param1.Data.Write("<script type='application/x-javascript'>")
           }else{
              d param1.Data.Write("<data>")
           }
           
           s isAddHTMLCacheLib=0
           if $zObjClassMethod("%CompiledClass","%ExistsId","HTML.CacheLib")=0  s isAddHTMLCacheLib=-1
           if $zObjClassMethod("%CompiledClass","%ExistsId","%ZHTML.CacheLib")=0  s isAddHTMLCacheLib=-1
           f  {
              q:file.AtEnd 
              s ind=ind+1 
              s html=file.ReadLine()
              continue:$l($zcvt(html,"L"),"<!doctype html>")=2
              s html=$zcvt(html,"I","UTF8")
              s html=$replace(html,"<br>","<br />")
              s isChange=0
              // замена относительного пути на класс, если он есть в списке
              if $l(html,"../")>1 {
                 s PosStart=$l($p(html,"../",1))
                 s Symb=$e(html,PosStart,PosStart)
                 s Tmphtml=$e(html,PosStart+1,$l(html))
                 s PathAll=$p(Tmphtml,Symb,1)
                 s Path=$e(PathAll,1,$l(PathAll)-$l($p(PathAll,".",$l(PathAll,".")))-1)
                 s Path=$replace(Path,"/",".")
                 s PathSearch=$replace(Path,"..","")
                 s ClassName3=""
                 for  {
                    s ClassName3=$o(@gl@(ClassName3))
                    q:ClassName3=""
                    if $l(ClassName3,PathSearch)=2,$l($p(ClassName3,PathSearch,2))=0 {
                       s CacheName3=$lg(@gl@(ClassName3),3)
                       s html=$REPLACE(html,PathAll,CacheName3)
                       s html=$REPLACE(html,"../","")
                       q
                   }
                 }
                 s isChange=1
              }
              // замена неполный путь внутри пакета  Скрипт
              if isChange=0,$l(html,"<script ")>1,$l(html,"src")>1  {
                 s PosStart=$l($p(html,"src=",1))+$l("src=")+1
                 s Symb=$e(html,PosStart,PosStart)
                 s Tmphtml=$e(html,PosStart+1,$l(html))
                 s PathAll=$p(Tmphtml,Symb,1)
                 s path=$e(PathAll,1,$l(PathAll)-$l($p(PathAll,".",$l(PathAll,".")))-1)
                 s PathSearch=$replace(path,".","")
                 s PathSearch=$replace(PathSearch,"/",".")
                 s ClassName3=""
                 for  {
                    s ClassName3=$o(@gl@(ClassName3))
                    q:ClassName3=""
                    ; s ^deb(PathSearch,ClassName3)=PathSearch
                    if $l(ClassName3,PathSearch)=2,$l($p(ClassName3,PathSearch,2))=0 {
                       s CacheName3=$lg(@gl@(ClassName3),3)
                       s html=$REPLACE(html,PathAll,CacheName3)
                       q
                   }
                 }
              }
              // замена неполный путь внутри пакета  Стили
              if isChange=0,$l(html,"href")>1  {
                 s PosStart=$l($p(html,"href=",1))+$l("href=")+1
                 s Symb=$e(html,PosStart,PosStart)
                 s Tmphtml=$e(html,PosStart+1,$l(html))
                 s PathAll=$p(Tmphtml,Symb,1)
                 s path=$e(PathAll,1,$l(PathAll)-$l($p(PathAll,".",$l(PathAll,".")))-1)
                 s PathSearch=$replace(path,"/",".")
                 s ClassName3=""
                 for  {
                    s ClassName3=$o(@gl@(ClassName3))
                    q:ClassName3=""
                    if $l(ClassName3,PathSearch)=2,$l($p(ClassName3,PathSearch,2))=0 {
                       s CacheName3=$lg(@gl@(ClassName3),3)
                       s html=$REPLACE(html,PathAll,CacheName3)
                       q
                   }
                 }
              }
              
              if $l(html,"<meta ")>1 {
                if $l(html,"/>")=1,$l(html,">")=2 {
                   s html=$replace(html,">","/>")
                }
              }
              if $l(html,"<script ")>1,$l(html,"src")>1  {
                if $l(html,"/>")=1,$l(html,">")=2 {
                   s html=$replace(html,">","/>")
                }
              }
	          if $l(html,"<link ")>1,$l(html,"href")>1  {
                if $l(html,"/>")=1,$l(html,">")=2 {
                   s html=$replace(html,">","/>")
                }
              }

              s html=$replace(html,"<br>","<br />")
              s ClassName2=""
              for  {
                  s ClassName2=$o(@gl@(ClassName2))
                  q:ClassName2=""
                  s FileName2=$lg(@gl@(ClassName2),1)
                  s JsName2=$lg(@gl@(ClassName2),2)
                  s CacheName2=$lg(@gl@(ClassName2),3)
                  if $l(html,JsName2)>1{
                      s html=$REPLACE(html ,JsName2,CacheName2)
                  }
                  
                  /// добавление системной библиотеки, если есть в БД  HTML.CacheLib или %ZHTML.CacheLib
                  ;  if ( ($l(html,"<script")>1) || ($l(html,"<link")>1)) , isAddHTMLCacheLib=0 {
	              ;      if $zObjClassMethod("%CompiledClass","%ExistsId","HTML.CacheLib")=1 {
	              ;        s html="<script src='HTML.CacheLib.cls' type='text/javascript' ></script>"_$c(10)_html
	              ;      }elseif $zObjClassMethod("%CompiledClass","%ExistsId","%ZHTML.CacheLib")=1 {
	              ;        s html="<script src='%25ZHTML.CacheLib.cls' type='text/javascript' ></script>"_$c(10)_html
	              ;      }
	              ;      s isAddHTMLCacheLib=1
                  ;  }
               }
               // s html=$ZCVT(html,"o","XML")
               // s html=$REPLACE(html,"&","&amp;")
               s html=$c(10)_html
               d param1.Data.Write(html)
           }
           if rashirenie="scss"{
             d param1.Data.Write($c(10)_"</style>")
           }elseif rashirenie="css"{
              d param1.Data.Write($c(10)_"</style>")
           }elseif rashirenie="js"{
              d param1.Data.Write($c(10)_"</script>")
           }else{
              d param1.Data.Write($c(10)_"</data>")
           }
           d param1.%Save()
           d tt.XDatas.Insert(param1)
           w tt.%Save(),!
           d MethodDestroy.Implementation.WriteLine("     d ..DrawXdata("""_paramName_""")")
          ;  d MethodDestroy.Implementation.WriteLine("   s XdataName="""_paramName_"""")
          ;  d MethodDestroy.Implementation.WriteLine("   s gl=""^oddDEF(""""""_##this_"""""",""""x"""",""""""_XdataName_"""""",21)""  ")
          ;  d MethodDestroy.Implementation.WriteLine("   s FragOnPageInd=""""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),""/*("","")*/"")     w $c(13,10)  }")
      }    
      
      d MethodDestroy.Implementation.WriteLine("     Quit $$$OK ")
      s MethodDestroy.Internal=0
      d MethodDestroy.%Save()
      d tt.Methods.Insert(MethodDestroy)
      w tt.%Save(),!
      ; копируем методы
      ; d ..CopyMethod(##this,"ContentTypeLocal",tt,"ContentType")
      d ..CopyMethod(##this,"ExecFrag",tt,"ExecFrag")
      d ..CopyMethod(##this,"DrawXdata",tt,"DrawXdata")
      
      Do $system.OBJ.Compile(ClassName,"cuk /checkuptodate=expandedonly")
   }
]]></Implementation>
</Method>

<Method name="ContentTypeLocal">
<ClassMethod>1</ClassMethod>
<FormalSpec>FileName</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
     s rashirenie=$p(FileName ,".", $l(FileName,"."))
     q:rashirenie="css" "text/css"
     q:rashirenie="js" "application/x-javascript"
     q:rashirenie="xml" "text/xml"
     q:rashirenie="dtd" "text/xml"
   ; -------------------------------------
     q:rashirenie="txt" "text/plain"
     q:rashirenie="inf" "text/plain"
     q:rashirenie="nfo" "text/plain"
   ; -------------------------------------
     q:rashirenie="html" "text/html"
     q:rashirenie="htm" "text/html"
     q:rashirenie="shtml" "text/html"
     q:rashirenie="shtm" "text/html"
     q:rashirenie="stm" "text/html"
     q:rashirenie="sht" "text/html"
     q:rashirenie="sht" "text/html"
     q:rashirenie="csp" "text/html"
     q:rashirenie="mac" "text/html"
     q:rashirenie="cls" "text/html"
     ; q:rashirenie="cos" "text/html" ; каше обжект скрипт
   ; -------------------------------------
     q:rashirenie="mpeg" "video/mpeg"
     q:rashirenie="mpg" "video/mpeg"
     q:rashirenie="mpe" "video/mpeg"
   ; -------------------------------------
     q:rashirenie="ai" "application/postscript"
     q:rashirenie="zip" "application/zip"
                  q:rashirenie="zsh" "text/x-script.zsh"
                  q:rashirenie="x-png" "image/png"
                  q:rashirenie="xls" "application/x-excel"
                  q:rashirenie="xlm" "application/excel"
                  q:rashirenie="wav" "audio/x-wav"
                  q:rashirenie="txt" "text/plain"
                  q:rashirenie="tiff" "image/tiff"
                  q:rashirenie="tif" "image/x-tiff"
                  q:rashirenie="text" "text/plain"
                  q:rashirenie="swf" "application/x-shockwave-flash"
                  q:rashirenie="sprite" "application/x-sprite"
                  q:rashirenie="smil" "application/smil"
                  q:rashirenie="sh" "text/x-script.sh"
                  q:rashirenie="rtx" "text/richtext"
                  q:rashirenie="rtf" "text/richtext"
                  q:rashirenie="pyc" "application/x-bytecode.python"
                  q:rashirenie="py" "text/x-script.phyton"
                  q:rashirenie="png" "image/png"
                  q:rashirenie="pic" "image/pict"
                  q:rashirenie="mp3" "video/mpeg"
                  q:rashirenie="mp2" "video/mpeg"
                  q:rashirenie="movie" "video/x-sgi-movie"
                  q:rashirenie="mov" "video/quicktime"
                  q:rashirenie="mjpg" "video/x-motion-jpeg"
                  q:rashirenie="mime" "www/mime"
                  q:rashirenie="mif" "application/x-mif"
                  q:rashirenie="midi" "audio/midi"
                  q:rashirenie="js" "application/javascript"
                  q:rashirenie="jpeg" "image/jpeg"
                  q:rashirenie="jpg" "image/jpeg"
                  q:rashirenie="jps" "image/x-jps"
                  q:rashirenie="jam" "audio/x-jam"
                  q:rashirenie="jav" "text/plain"
                  q:rashirenie="java" "text/x-java-source"
                  q:rashirenie="htm" "text/html"
                  q:rashirenie="html" "text/html"
                  q:rashirenie="gzip" "application/x-gzip"
                  q:rashirenie="gif" "image/gif"
                  q:rashirenie="gl" "video/gl"
                  q:rashirenie="csh" "text/x-script.csh"
                  q:rashirenie="css" "text/css"
                  q:rashirenie="bsh" "application/x-bsh"
                  q:rashirenie="bz" "application/x-bzip"
                  q:rashirenie="bz2" "application/x-bzip2"
                  q:rashirenie="c" "text/plain"
                  q:rashirenie="c++" "text/plain"
                  q:rashirenie="cat" "application/vnd.ms-pki.seccat"
                  q:rashirenie="cc" "text/plain"
                  q:rashirenie="htmls" "text/html"
                  q:rashirenie="bmp" "image/bmp"
                  q:rashirenie="bm" "image/bmp"
                  q:rashirenie="avi" "video/avi"
                  q:rashirenie="avs" "video/avs-video"
                  q:rashirenie="au" "audio/basic"
                  q:rashirenie="arj" "application/arj"
                  q:rashirenie="art" "image/x-jg"
                  q:rashirenie="asf" "video/x-ms-asf"
                  q:rashirenie="asm" "text/x-asm"
                  q:rashirenie="asp" "text/asp"
     q "application/octet-stream"
]]></Implementation>
</Method>

<Method name="CopyMethod">
<Description>
Метод копирования методов </Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>ClassNameOld="",OldNameMethod="",ClassNameNew="",NewNameMethod=""</FormalSpec>
<Implementation><![CDATA[
   s $ZTRAP="errorCopyMeth"
     if '$isobject(ClassNameNew){
       s ttNew=##class(%Dictionary.ClassDefinition).%OpenId(ClassNameNew)
     }else{
	   s ttNew=ClassNameNew
     }
     if '$isobject(ClassNameOld){
       s ttOld=##class(%Dictionary.ClassDefinition).%OpenId(ClassNameOld)
     }else{
	   s ttOld=ClassNameOld
     }
     ; Удалчем классметод в целевом классе
     for i=1:1:ttNew.Methods.Count() d
     .  q:ttNew.Methods.GetAt(i).Name'=ClassNameNew
     .  d ttNew.Methods.GetAt(i).%Delete(ttNew.Methods.GetAt(i).%Oid())
     .  d ttNew.Methods.RemoveAt(i)
     .  d ttNew.%Save()
     ; Копируем метод
     for i=1:1:ttOld.Methods.Count() d
     .   q:ttOld.Methods.GetAt(i).Name'=OldNameMethod
     .   s obj=ttOld.Methods.GetAt(i).%ConstructClone()
     .   d ttNew.Methods.Insert(obj) 
     .   w ttNew.%Save()
errorCopyMeth
     q
]]></Implementation>
</Method>

<Method name="ExecFrag">
<Description>
Метод разбики исходного текста на Cache` код и HTML текст</Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>SrcCode="",Beg="",End=""</FormalSpec>
<Implementation><![CDATA[     q:SrcCode=""   q:Beg=""    q:End=""    for ExecFragInd=1:1:$l(SrcCode,End){  s tmp=$p(SrcCode,End,ExecFragInd)   s Html=$p(tmp,Beg,1)     s Code=$p(tmp,Beg,2)   w Html   TRY {     x Code    } CATCH ErrorHandle {    zw ErrorHandle  }    }
]]></Implementation>
</Method>

<Method name="DrawXdata">
<ClassMethod>1</ClassMethod>
<FormalSpec>Name={##This_":XDataContet"}</FormalSpec>
<Language>cache</Language>
<ReturnType>%Library.Status</ReturnType>
<Implementation><![CDATA[
   if $l(Name,":")=1,$e(Name,1,2)'=".."{  s Name=".."_Name  }
   if $e(Name,1,2)=".." {  s ClassName=##This,XdataName=$e(Name,3,$l(Name))
   }else{                  s ClassName=$p(Name,":",1),XdataName=$p(Name,":",2)  }
   s gl="^oddDEF("""_ClassName_""",""x"","""_XdataName_""",21)"  
   s FragOnPageInd=""  f {  s FragOnPageInd=$o(@gl@(FragOnPageInd))  q:FragOnPageInd=""  continue:FragOnPageInd=1  q:FragOnPageInd=@gl      d ..ExecFrag(@gl@(FragOnPageInd),"/*(",")*/")     w $c(13,10)  }
]]></Implementation>
</Method>
</Class>
</Export>
